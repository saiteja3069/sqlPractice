1) Consider p1(a,b) and p2(c,d)  to be two points on a 2D plane.
   a happens to equal the minimum value in Northern Latitude (LAT_N in STATION).
   b happens to equal the minimum value in Western Longitude (LONG_W in STATION).
   c happens to equal the maximum value in Northern Latitude (LAT_N in STATION).
   d happens to equal the maximum value in Western Longitude (LONG_W in STATION).
  Query the Manhattan Distance between points p1  and p2  and round it to a scale of  decimal places.
Ans:
select abs(round((min(LAT_N)- max(LAT_N)),4) + round((min(LONG_W)-max(LONG_W)),4)) from station;

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2) Consider p1(a,c)  and p2(b,c) to be two points on a 2D plane where (a,b)  are the respective minimum and maximum values of Northern Latitude (LAT_N) and (c,d) are the respective minimum and maximum values of Western Longitude (LONG_W) in STATION.
Query the Euclidean Distance between points  and  and format your answer to display 4 decimal digits.
Ans:
select round(sqrt(pow(max(lat_n)-min(lat_n),2)+pow(max(long_w)-min(long_w),2)),4) from station
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3) Generate the following two result sets:

Query an alphabetically ordered list of all names in OCCUPATIONS, immediately followed by the first letter of each profession as a parenthetical (i.e.: enclosed in parentheses). For example: AnActorName(A), ADoctorName(D), AProfessorName(P), and ASingerName(S).
Query the number of ocurrences of each occupation in OCCUPATIONS. Sort the occurrences in ascending order, and output them in the following format:

There are a total of [occupation_count] [occupation]s.
where [occupation_count] is the number of occurrences of an occupation in OCCUPATIONS and [occupation] is the lowercase occupation name. If more than one Occupation has the same [occupation_count], they should be ordered alphabetically.
Ans:
select concat(name,'(',substr(occupation,1,1),')') from occupations order by name; 
select concat('There are a total of ',count(occupation),' ',lower(occupation), 's.') from occupations group by occupation order by count(occupation),occupation;
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4) You are given a table, BST, containing two columns: N and P, where N represents the value of a node in Binary Tree, and P is the parent of N.
Write a query to find the node type of Binary Tree ordered by the value of the node. Output one of the following for each node:
Root: If node is root node.
Leaf: If node is leaf node.
Inner: If node is neither root nor leaf node.
Ans:

SELECT N,
CASE
WHEN P is NULL THEN 'Root'
WHEN N in (SELECT P FROM BST) THEN 'Inner'
ELSE 'Leaf'
END
FROM BST
ORDER BY N;
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5) Amber's conglomerate corporation just acquired some new companies. Each of the companies follows this hierarchy: 
Given the table schemas below, write a query to print the company_code, founder name, total number of lead managers, total number of senior managers, total number of managers, and total number of employees. Order your output by ascending company_code.
Note:
The tables may contain duplicate records.
The company_code is string, so the sorting should not be numeric. For example, if the company_codes are C_1, C_2, and C_10, then the ascending company_codes will be C_1, C_10, and C_2.
Ans:

SELECT c.company_code, c.founder, COUNT(DISTINCT l.lead_manager_code), COUNT(DISTINCT s.senior_manager_code), COUNT(DISTINCT m.manager_code), COUNT(DISTINCT e.employee_code) 
FROM Company as c
JOIN Lead_manager as l 
ON c.company_code = l.company_code 
JOIN Senior_manager as s
ON l.lead_manager_code = s.lead_manager_code 
JOIN Manager as m
ON s.senior_manager_code = m.senior_manager_code
JOIN Employee as e
ON m.manager_code = e.manager_code
GROUP BY a.company_code,a.founder
ORDER BY a.company_code;
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6) A median is defined as a number separating the higher half of a data set from the lower half. Query the median of the Northern Latitudes (LAT_N) from STATION and round your answer to 4 decimal places.
Ans:
SELECT
CONVERT(DECIMAL(11,4),(
 (SELECT MAX(LAT_N) FROM
   (SELECT TOP 50 PERCENT LAT_N FROM STATION ORDER BY LAT_N) AS BottomHalf)
 +
 (SELECT MIN(LAT_N) FROM
   (SELECT TOP 50 PERCENT LAT_N FROM STATION ORDER BY LAT_N DESC) AS TopHalf)
) / 2)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7) 

